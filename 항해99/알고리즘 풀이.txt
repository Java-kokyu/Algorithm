1. 
public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int a = sc.nextInt();
        int b = sc.nextInt();

        for(int i = 0; i < b; i++){
            for(int j = 0; j < a; j++){
                System.out.printf("*");
            }
            System.out.println();
        }
    }
}

2. 
class Solution {
    public String solution(int num) {
        String answer = "";
        if(num % 2 == 0){
            answer = "Even";
        } else{
            answer = "Odd";
        }
        return answer;
    }
}

3. 
 public String solution(String s) {
        String answer = "";
        int index = s.length() / 2;
        if (s.length() % 2 == 1){
            char temp = s.charAt(index);
            answer = String.valueOf(temp);
        }else {
            answer += s.charAt(index-1);
            answer += s.charAt(index);
        }
        return answer;
    }

public class Main {
    public static void main(String[] args) {
        String str1 = "minji";
        String str2 = "jaywan";

        Solution s = new Solution();
        String answer = s.solution(str1);
        System.out.println(answer);

        answer = s.solution(str2);
        System.out.println(answer);
    }
}

4. 조건 잘 보기!
public long solution(int a, int b) {
	 long A = a;
	 long B = b;
        long answer = (A < B)? ((A+B) * (B-A+1) / 2) : ((A+B) * (A-B+1) / 2);
        return answer;
    }

5. 
if(s.length() < 1) System.out.println("올바른 값을 입력하세요!");

        int answer = Integer.parseInt(s);
        return answer;if(s.length() < 1) System.out.println("올바른 값을 입력하세요!");

        int answer = Integer.parseInt(s);
        return answer;

6.
public int solution(int[] numbers) {
        int result = 45;
        for(int i = 0; i < numbers.length; i++){
            result -= numbers[i];
        }
        return result;
    }

7.
public int solution(int[] absolutes, boolean[] signs) {
        int result = 0;
        for (int i = 0; i < absolutes.length; i++) {
            if (signs[i]) {
                result += absolutes[i];
            } else {
                result -= absolutes[i];
            }
        }
        return result;
    }

8. for-each문!
 public double solution(int[] arr) {
        long sum = 0;
        int lenAry = arr.length;
        for(int i = 0; i < lenAry; i++){
             sum += arr[i];
        }        
        double answer = (double) sum / lenAry;
        return answer;
    }

9. 
 public String solution(String phone_number) {
        String answer = "";
        int num = phone_number.length();
        String end_num = phone_number.substring(num-4, num);
        for (int i = 0; i < (num-4); i++) answer += "*";
        answer += end_num;
        return answer;
    }

String을 char[]로 변형해서 for문
for(int i = 0; i  < phone_number.length() - 4)

10.
public int[][] solution(int[][] arr1, int[][] arr2) {
        int[][] answer = {}; //new int 실행 했었어야
        int row = arr1.length;
        int column = arr1[0].length;
        for (int i = 0; i < row; i++){
            for(int j = 0; j < column; j++){
                answer[i][j] = arr1[i][j] + arr2[i][j];
            }
        }
        return answer;
    }
//오류 코드

public int[][] solution(int[][] arr1, int[][] arr2) {
        int row = arr1.length;
        int column = arr1[0].length;
        int[][] answer = new int[row][column];
	// int[][] answer = arr1 할당 후 arr2 추가
        for (int i = 0; i < row; i++){
            for(int j = 0; j < column; j++){
                answer[i][j] = arr1[i][j] + arr2[i][j];
            }
        }
        return answer;
    }

12. 
class Solution {
    public long solution(int price, long money, int count) {
        long pay = ((long)price * count * (count + 1) / 2);
        if(price < 0 | money < 0 | count < 0) return 0;
        return (money >= pay)? 0 : pay - money;
    }
}

13. 
class Solution {
    public String solution(int a, int b) {
        Count_Day d = new Count_Day();
        int result_num = d.count_day(a, b) % 7;
        String[] days = {"THU", "FRI", "SAT", "SUN", "MON", "TUE", "WED"};
        String answer = days[result_num];
        return answer;
    }
}

class Count_Day{
    public int count_day(int a, int b) {
        int day = 0;
        switch (a){
            case 1:
                day = b;
                break;
            case 2:
                day = 31 + b;
                break;
            case 3:
                day = 31 + 29 + b;
                break;
            case 4:
                day = 31*2 + 29 + b;
                break;
            case 5:
                day = 30 + 31*2 + 29 + b;
                break;
            case 6:
                day = 30 + 31*3 + 29 + b;
                break;
            case 7:
                day = 30*2 + 31*3 + 29 + b;
                break;
            case 8:
                day = 30*2 + 31*4 + 29 + b;
                break;
            case 9:
                day = 30*2 + 31*5 + 29 + b;
                break;
            case 10:
                day = 30*3 + 31*5 + 29 + b;
                break;
            case 11:
                day = 30*3 + 31*6 + 29 + b;
                break;
            case 12:
                day = 30*4 + 31*6 + 29 + b;
                break;
        }
        return day;
    }
}

14.
public int[] solution(int[] arr, int divisor) {
        List <Integer> temp = new ArrayList<Integer>();

        for(int i = 0; i < arr.length; i++){
            if(arr[i] % divisor == 0){
               temp.add(arr[i]);
            }
        }
        int[] answer = temp.stream().mapToInt(i -> i).sorted().toArray();
        if (answer.length == 0)
            answer = new int[]{-1};
        return answer;

    }

//예시 답안
Arrays.stream(array).filter(factor -> factor % divisor == 0).toArray()

15.
public int solution(int[] a, int[] b) {
        int answer = 0;
        for (int i = 0; i < a.length; i++){
            answer += a[i] * b[i];
        }

        return answer;
    }

16.
class Solution {
    boolean solution(String s) {
        int count_p = 0;
        int count_y = 0;
        String str = s.toLowerCase(Locale.ROOT);
        for(int i = 0; i < s.length(); i++){
            if(str.charAt(i)=='p') count_p++;
            else if(str.charAt(i)=='y') count_y++;
        }
        System.out.printf("%d %d",count_p, count_y);
        return (count_p == count_y);
    }
}
//예시답안
return s.chars().filter( e -> 'P'== e).count() == s.chars().filter( e -> 'Y'== e).count();

17.
class Solution {
    public boolean solution(String s) {
        boolean answer = true;
        if (s.length() != 4 && s.length() != 6) return false;
        for (int i = 0; i < s.length(); i++) {
            if (!(s.charAt(i) >= '0' && s.charAt(i) <= '9')) return false;
        }
        return true;
    }
}

try - catch(Exception e)

18.
class Solution {
    public String solution(String[] seoul) {
        String answer = "";
        for(int i = 0; i < seoul.length; i++){
            if(seoul[i].equals("Kim")){
                answer = "김서방은 " + i + "에 있다";
            }
        }
        return answer;
    }
}
// 자바에서 String 비교시 ==이 아니라 반드시 equals() 메소드 사용!

19.
class Solution {
    public String solution(int n) {
        String answer = "";
        for(int i = 0; i < n; i++) {
            if(i % 2 == 1){
                answer += "수";
            } else {
                answer += "박";
            }
        }
        return answer;
    }
}
//answer += (i % 2 == 0) ? "수" : "박";

20.
public String solution(String[] participant, String[] completion) {
        String answer = "";

        List <String> ary_p = new ArrayList<>(Arrays.asList(participant));
        for(int i = 0; i < completion.length; i++) {
            int index = ary_p.indexOf(completion[i]);
            ary_p.remove(index);
        }
        answer = ary_p.get(0);
        System.out.println(answer);
        return answer;
    }
//시간 초과

public String solution(String[] participant, String[] completion) {
        String answer = "";

        List <String> result = new ArrayList<>();

        Set<String> set_p = new HashSet<>(Arrays.asList(participant));
        List<String> list_p = new ArrayList<>(Arrays.asList(participant));
        List<String> list_c = new ArrayList<>(Arrays.asList(completion));

        if(set_p.size() == participant.length){
            list_p.removeAll(list_c);
            answer = list_p.get(0);
        } else {
            for(int i = 0; i < completion.length; i++) {
                int index = list_p.indexOf(completion[i]);
                list_p.remove(index);
            }
            answer = list_p.get(0);

        }

        return answer;
    }

class Solution {
    public String solution(String s) {
        String answer = "";
        List<Integer> space_count = new ArrayList<>();
        int count = 0;
        for (int i = 0; i < s.length(); i++) {
            char temp = s.charAt(i);
            if (temp == ' ') {
                count++;
                continue;
            } else {
                if (count != 0) space_count.add(count);
                count = 0;
            }
        }

        System.out.println(space_count);

        String[] str = s.split("\\s+");
        for (int i = 0; i < str.length; i++) {
            for (int j = 0; j < str[i].length(); j++) {
                answer += (j % 2 == 0) ? str[i].toUpperCase().charAt(j) : str[i].toLowerCase().charAt(j);
            }
            answer += "0";
        }
        String[] str2 = answer.split("0");
        String final_answer = str2[0];

        for (int i = 0; i < str2.length - 1; i++) {
            for (int j = 0; j < space_count.get(i); j++) {
                final_answer += " ";
            }
            final_answer += str2[i + 1];
        }
        System.out.println(final_answer);
        return final_answer;
    }

}

class Solution {
    public String solution(String s) {
        String answer = "";
        String answer_str = s;

        String[] str = s.split("\\s+");
        String[] changedStr = new String[str.length];
        for (int i = 0; i < str.length; i++) {
            String word = "";
            for (int j = 0; j < str[i].length(); j++) {
                word += (j % 2 == 0) ? str[i].toUpperCase().charAt(j) : str[i].toLowerCase().charAt(j);
            }
            changedStr[i] = word;

            answer_str = answer_str.replace(str[i], changedStr[i]);
        }
        System.out.println(answer_str);
        return answer_str;
    }
}
21.
class Solution {
    public String solution(String s) {
        String answer = "";
        String[] str = s.split(" ", -1);
        for(int i = 0; i < str.length; i++){
            if(str[i].equals("") && i != str.length-1){
                answer += " ";
                continue;
            }
            for (int j = 0; j < str[i].length(); j++) {
                answer += (j % 2 == 0) ? str[i].toUpperCase().charAt(j) : str[i].toLowerCase().charAt(j);
            }
            if(i != str.length - 1) answer += " ";
        }
        System.out.println(answer);


        return answer;21
    }
}
24.
class Solution {
    public long solution(long n) {
        long answer = 0;
        int num = 0;
        long share = n;
        List<Integer> num_list = new ArrayList<>();

        for (int i = 0; share != 0 ; i++) {
            num = (int) share % 10;
            share = share / 10;
            num_list.add(num);
        }
        Collections.sort(num_list);
        answer = num_list.get(0);
        for (int j = 1; j < num_list.size(); j++) {
            long digit = (long)Math.pow(10, j);
            answer += (long)num_list.get(j) * digit;
        }
        return answer;
    }

}

res = "";
        Integer.toString(n).chars().sorted().forEach(c -> res = Character.valueOf((char)c) + res);
        return Integer.parseInt(res);

String str = Integer.toString(n);
        char[] c = str.toCharArray();
        Arrays.sort(c);
        StringBuilder sb = new StringBuilder(new String(c,0,c.length));  
        return Integer.parseInt(((sb.reverse()).toString()));